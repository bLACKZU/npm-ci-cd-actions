name: On-Demand Staging

on:
  workflow_dispatch:
    inputs:
      PR_number:
        description: 'Pull request number'
        required: true

jobs:
  create:
    name: Create Staging Environment and Deploy
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    
    steps:
    - name: Verify PR Number
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        result-encoding: string
        script: |
            const response = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: ${{ inputs.PR_number }},
            });
            if (response.data.number !== ${{ inputs.PR_number }}) {
              throw new Error('Pull request is not open or number is not valid!');
            } else {
              console.log("PR ref: " + response.data.head.ref);
              return response.data.head.ref;
            }
    
    - name: Checkout infra Code
      uses: actions/checkout@v4
      with:
        repository: bLACKZU/npm-infra
        path: npm-infra
    
    - name: List files
      run: |
        echo "Files in parent directory:"
        ls -l
        echo "Files in npm-infra directory:" 
        ls -l npm-infra
        pwd

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"
  
    - name: Create stage environment resource file
      id: create_stage_resource_file
      run: |
        current=$(pwd)
        chmod +x $current/npm-infra/staging/create_staging_resource.sh
        OUTPUT="$($current/npm-infra/staging/create_staging_resource.sh PR_${{ inputs.PR_number }} | jq -r .terraform_expected_output)"
        echo "STAGING_RESOURCE_NAME=$OUTPUT" >> $GITHUB_OUTPUT

    - name: Terraform Init & Validate
      working-directory: ${{ github.workspace }}/npm-infra/staging
      run: |
        terraform init
        terraform validate -no-color

        